version: '3.8'

services:
  solana:
    platform: linux/arm64
    image: solanalabs/solana:stable
    entrypoint: ["sh", "-c"]
    command: 
      - |
        ./init-solana.sh
        solana-test-validator --no-bpf-jit --no-port-check --init-complete-file /root/.config/solana/init-complete
        # After validator is ready, airdrop some SOL
        until solana cluster-version 2>/dev/null; do
          echo "Waiting for validator..."
          sleep 2
        done
        solana airdrop 2 $(solana address) || echo "Airdrop failed, continuing anyway..."
    ports:
      - "8899:8899"
      - "8900:8900"
    volumes:
      - solana:/root/.config/solana
      - ./solana-config.json:/root/.config/solana/config.json
      - ./init-solana.sh:/init-solana.sh
    environment:
      - RUST_LOG=solana=info
      - SOLANA_METRICS_CONFIG=host=http://localhost:8889,db=dummy
    healthcheck:
      test: solana cluster-version || exit 1
      interval: 5s
      timeout: 5s
      retries: 1

  app:
    platform: linux/arm64
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - solana:/root/.config/solana
      - ./solana-config.json:/root/.config/solana/config.json
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - SOLANA_RPC_URL=http://solana:8899
      - OPENBLAS_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - RUST_LOG=solana=info
    depends_on:
      solana:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:5000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  solana: